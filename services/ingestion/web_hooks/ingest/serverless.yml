service: ingest

custom:
  stage: ${opt:stage, self:provider.stage}
  project: dataplattform-${self:custom.stage}

provider:
  name: aws
  stage: dev
  region: eu-central-1
  stackName: ${self:custom.stage}-${self:service}
  deploymentBucket:
    name: dataplattform-v2-deploymentbucket
  runtime: python3.7
  memorySize: 1024
  timeout: 5

  tags:
    project: dataplattform
    layer: input
    input: ingest
  stackTags:
    project: dataplattform
    layer: input
    input: ingest

package:
  individually: true
  exclude:
    - "./**"

functions:
  ingest:
    module: src/ingest/
    handler: ingest.handler
    name: ${self:custom.ingest_lambda}
    description: main ingest lambda
    role: ingestRole

    package:
      include:
        - 'src/ingest/*.py' # Files to include in deployment

    events:
      - http:
          path: ingest/{type}
          method: post
          private: false

resources:
  Resources:
    ingestRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.project}-IngestRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        Policies:
          - PolicyName: ${self:custom.project}-dynamodb-rawtable-writeonly
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                  Resource:
                    - 'Fn::ImportValue': ${self:custom.project}-dynamodb-rawtable-arn
